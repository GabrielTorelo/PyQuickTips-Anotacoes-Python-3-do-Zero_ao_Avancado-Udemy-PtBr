Introdução a importação de módulos:
  Conceito: Importações de módulos são utilizadas para trazer funcionalidades de outros arquivos para o código atual. 
  Ou seja: Elas permitem acessar funções, classes e variáveis definidas em outros módulos.
  Uso: As importações podem serem feitas de diferentes formas, importando um módulo completo, partes específicas ou até mesmo renomear a importação para facilitar o seu uso no código.
  Dica: Em termos de memória é irrelevante importar um módulo inteiro ou apenas partes dele.
  Exemplos:
    1 - Importar um módulo completo:
      import sys
    2 - Importar todas as funções de um módulo:
      import sys as *
    3 - Importar algo específico de um módulo:
      from sys import exit
    4 - Renomear a importação de um módulo:
      import sys as sy

Módulos próprios:
  Conceito: Módulos próprios são arquivos Python (.py) que contêm implementações de funções, classes e variáveis que podem ser reutilizadas.
  Ou seja: Qualquer arquivo Python (.py) pode ser considerado um módulo, podendo ser importado e utilizado.
  ATENÇÃO: SEMPRE o PRIMEIRO módulo executado chama-se '__main__'.
  Cuidado: O python só conhece a pasta onde o '__main__' está e as pastas abaixo dele.
  Uso: Usado para dividir projetos em partes menores, permitindo a reutilização de código e facilitando a manutenção.
  Exemplos:
    1 - Utilizando um módulo próprio:
      import meu_modulo
      print(meu_modulo.soma(3, 4))
    2 - Importando uma função específica do módulo:
      from meu_modulo import soma
      print(soma(10, 5))
    3 - Usando alias para módulos:
      import meu_modulo as mm
      print(mm.soma(7, 3))

Pacotes (packages):
  Conceito: Pacotes são diretórios que contêm múltiplos módulos Python.
  Cuidado: O Python só conhece a pasta onde o '__main__' está e as pastas abaixo dela, então, organize seus pacotes dentro dessas pastas.
  Uso: Usado para organizar módulos relacionados em uma estrutura hierárquica, facilitando a navegação e a manutenção do código.
  Dica: Ao usar um arquivo '__init__.py' o Python reconheçe um pacote como um módulo.
    Ou seja: É possível utilizá-lo como um facilitador de chamada, podendo referenciar e disponibilizar 'n' módulos em um simples 'import'.
  Exemplos:
    1 - Estrutura básica de um pacote:
      import meu_pacote
      print(meu_pacote.modulo1.soma(1, 3))
    2 - Importando uma função específica de um módulo dentro de um pacote:
      from meu_pacote.modulo1 import soma
      print(soma(7, 3))
    3 - Usando alias para um módulo de um pacote:
      import meu_pacote.modulo1 as mod1
      print(mod1.soma(10, 5))
